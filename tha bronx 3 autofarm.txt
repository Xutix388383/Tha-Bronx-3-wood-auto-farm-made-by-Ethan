task.spawn(function() local uis = game:GetService("UserInputService") local plr = game:GetService("Players").LocalPlayer repeat task.wait() until plr:FindFirstChild("PlayerGui"):FindFirstChild("BronxLoadscreen") local gui = plr:WaitForChild("PlayerGui"):WaitForChild("BronxLoadscreen", 10) local btn = gui:WaitForChild("Frame"):FindFirstChild("play") if btn and btn:IsA("ImageButton") then task.wait(3) local center = btn.AbsolutePosition + (btn.AbsoluteSize / 2) local virtualInput = game:GetService("VirtualInputManager") or getvirtualinputmanager or VInputManager if virtualInput and virtualInput.SendMouseButtonEvent then virtualInput:SendMouseMove(center.X, center.Y) task.wait(0.2) virtualInput:SendMouseButtonEvent(center.X, center.Y, 0, true, game, 0) task.wait(0.05) virtualInput:SendMouseButtonEvent(center.X, center.Y, 0, false, game, 0) else firesignal(btn.MouseButton1Click) end end end) getgenv().cfg={["switch_servers_when_no_wood"]=true,["serverhop_timeout"]=80} pcall(function() repeat task.wait(3) until game:IsLoaded() repeat task.wait(3) until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("BronxLoadscreen") end) pcall(function() repeat firesignal(game:GetService("Players").LocalPlayer.PlayerGui.BronxLoadscreen.Frame.play.MouseButton1Click) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("BronxLoadscreen") end) pcall(function() repeat task.wait(1) until not game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("BronxLoadscreen") end) start=tick() local job=workspace.ConstructionStuff["Start Job"].CFrame local function startjob() if not game.Players.LocalPlayer:GetAttribute("WorkingJob") or game.Players.LocalPlayer:GetAttribute("WorkingJob")==false then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=job fireproximityprompt(workspace.ConstructionStuff["Start Job"].Prompt) end end local function autoequipwood() if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("PlyWood") then game:GetService("Players").LocalPlayer.Backpack.PlyWood.Parent=game:GetService("Players").LocalPlayer.Character end end local function wood() for _,v in pairs(workspace.ConstructionStuff:GetDescendants()) do if v:IsA("ProximityPrompt") and v.ActionText=="Wall" then fireproximityprompt(v) end end end local function grabwood() for _,v in pairs(workspace.ConstructionStuff["Grab Wood"]:GetChildren()) do if v:IsA("ProximityPrompt") and v.ActionText=="Wood" then fireproximityprompt(v) end end end local function mainautofarm() for _,v in pairs(workspace.ConstructionStuff:GetDescendants()) do if v:IsA("Part") and string.find(v.Name,"Prompt") then local text=v:FindFirstChild("Attachment"):FindFirstChild("Gui"):FindFirstChild("Label").Text if not string.find(text,"RESETS") then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=v.CFrame end end end if not (game.Players.LocalPlayer.Backpack:FindFirstChild("PlyWood") or game.Players.LocalPlayer.Character:FindFirstChild("PlyWood")) then game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=CFrame.new(-1728,371,-1177) end end task.spawn(function() while task.wait(0.25) do xpcall(startjob,debug.traceback) end end) task.spawn(function() while task.wait(0.166) do xpcall(wood,debug.traceback) xpcall(grabwood,debug.traceback) xpcall(autoequipwood,debug.traceback) xpcall(mainautofarm,debug.traceback) end end) local PlaceID=game.PlaceId local AllIDs={} local foundAnything="" local actualHour=os.date("!*t").hour local File=pcall(function() AllIDs=game:GetService("HttpService"):JSONDecode(readfile("NotSameServers.json")) end) if not File then table.insert(AllIDs,actualHour) writefile("NotSameServers.json",game:GetService("HttpService"):JSONEncode(AllIDs)) end function TPReturner() local Site if foundAnything=="" then Site=game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..PlaceID.."/servers/Public?sortOrder=Asc&limit=100")) else Site=game.HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..PlaceID.."/servers/Public?sortOrder=Asc&limit=100&cursor="..foundAnything)) end local ID="" if Site.nextPageCursor and Site.nextPageCursor~="null" then foundAnything=Site.nextPageCursor end local num=0 for _,v in pairs(Site.data) do local Possible=true ID=tostring(v.id) if tonumber(v.maxPlayers)>tonumber(v.playing) then for _,Existing in pairs(AllIDs) do if num~=0 then if ID==tostring(Existing) then Possible=false end else if tonumber(actualHour)~=tonumber(Existing) then pcall(function() delfile("NotSameServers.json") AllIDs={} table.insert(AllIDs,actualHour) end) end end num=num+1 end if Possible then table.insert(AllIDs,ID) wait() pcall(function() writefile("NotSameServers.json",game:GetService("HttpService"):JSONEncode(AllIDs)) wait() game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID,ID,game.Players.LocalPlayer) end) wait(4) end end end end function Teleport() while wait() do pcall(function() TPReturner() if foundAnything~="" then TPReturner() end end) end end local function checkfornowood() if not cfg["switch_servers_when_no_wood"] then return end local x=true for _,v in pairs(workspace.ConstructionStuff:GetDescendants()) do if v:IsA("Part") and string.find(v.Name,"Prompt") then local text=v:FindFirstChild("Attachment"):FindFirstChild("Gui"):FindFirstChild("Label").Text if not string.find(text,"RESETS") then x=false break end end end if x then Teleport() end end local function timeout() while true do task.wait(1) if tick()-start>=cfg["serverhop_timeout"] then Teleport() end end end task.spawn(function() timeout() end) while task.wait(4) do xpcall(checkfornowood,debug.traceback) end
``` [A](https://github.com/PaHUB55/P-x-H/tree/715c9118a67059259880007b77679913b5a43e6c/README.md?copilot_analytics_metadata=eyJldmVudEluZm9fY2xpY2tTb3VyY2UiOiJjaXRhdGlvbkxpbmsiLCJldmVudEluZm9fY2xpY2tEZXN0aW5hdGlvbiI6Imh0dHBzOlwvXC9naXRodWIuY29tXC9QYUhVQjU1XC9QLXgtSFwvdHJlZVwvNzE1YzkxMThhNjcwNTkyNTk4ODAwMDdiNzc2Nzk5MTNiNWE0M2U2Y1wvUkVBRE1FLm1kIiwiZXZlbnRJbmZvX2NvbnZlcnNhdGlvbklkIjoiVzJTamIyUGk2eGtjaXRBVEIzWEozIiwiZXZlbnRJbmZvX21lc3NhZ2VJZCI6InM1UW5iekRrNEQ2d2JValBEM01QRyJ9&citationMarker=9F742443-6C92-4C44-BF58-8F5A7C53B6F1) [B](https://github.com/Soza13234342/Soza13234342/tree/bac92c53a8693b59f2c26029c2d1c66a23600b9a/README.md?copilot_analytics_metadata=eyJldmVudEluZm9fbWVzc2FnZUlkIjoiczVRbmJ6RGs0RDZ3YlVqUEQzTVBHIiwiZXZlbnRJbmZvX2NsaWNrRGVzdGluYXRpb24iOiJodHRwczpcL1wvZ2l0aHViLmNvbVwvU296YTEzMjM0MzQyXC9Tb3phMTMyMzQzNDJcL3RyZWVcL2JhYzkyYzUzYTg2OTNiNTlmMmMyNjAyOWMyZDFjNjZhMjM2MDBiOWFcL1JFQURNRS5tZCIsImV2ZW50SW5mb19jbGlja1NvdXJjZSI6ImNpdGF0aW9uTGluayIsImV2ZW50SW5mb19jb252ZXJzYXRpb25JZCI6IlcyU2piMlBpNnhrY2l0QVRCM1hKMyJ9&citationMarker=9F742443-6C92-4C44-BF58-8F5A7C53B6F1)
